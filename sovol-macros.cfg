[gcode_macro mainled_on]
gcode:
    SET_LED LED=main_led WHITE=1

[gcode_macro mainled_off]
gcode:
    SET_LED LED=main_led WHITE=0

#--------------------------------------------------------------------#
#--------------------------------------------------------------------#

[respond]
default_type: echo

[force_move]
enable_force_move: True

[gcode_macro _global_var]
variable_pause_park:{'x': 177, 'y': 0, 'z': 10, 'e': 1}
variable_cancel_park:{'x': 40, 'y': 350, 'z': 10, 'e': 1}
variable_z_maximum_lifting_distance: 345
variable_pause_resume_travel_speed: 150
variable_bed_mesh_calibrate_target_temp: 65
variable_load_filament_extruder_temp: 230
variable_heat_soak_time: 10 # in minutes
gcode:
    RESPOND TYPE=command MSG="{ printer['gcode_macro _global_var'] }"

[gcode_macro START_PRINT]
description: Starts the print
variable_state: 'Prepare'
variable_record_extruder_temp:0
variable_max_record_extruder_temp:0
gcode:
    SET_GCODE_VARIABLE MACRO=SOAK_WAIT VARIABLE=ignore_soak_wait VALUE=1 # ensure that the SOAK_WAIT macro does not turn off the heater mid-print!
    {% set bedtemp = params.BED_TEMP|default(60)|int %}
    {% set hotendtemp = params.EXTRUDER_TEMP|default(230)|int %}
    {% set heatsoak = params.HEATSOAK|default(True)|int %}
    {% set zadjust = params.Z_ADJUST|default(0.0)|float %}
    {% set chamber_temp = params.CHAMBER_TEMP|default(0)|int %}
    # {action_respond_info("zadjust: {}".format(zadjust))}

    {% if params.SOAK_MINUTE is defined %}
        {% set heatsoak_time = params.SOAK_MINUTE|default(10)|int %}
    {% else %}
        {% set heatsoak_time = printer['gcode_macro _global_var'].heat_soak_time|default(0)|int %} # takes heatsoak time from global variables
    {% endif %}

    {% set mesh_name = "default" %}
    {% set extruder_target_temp = 140 %}
    {% set bed_target_temp = bedtemp|int %}

    # SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
    # SET_FILAMENT_SENSOR SENSOR=filament_motion_sensor ENABLE=1
    # M106 S0 # Turn off part cooling fans

    # M400

    CLEAR_PAUSE

    G90
    {% if state == 'Prepare' %}

        M118 Preparing!

        {% if printer['filament_switch_sensor filament_sensor'].enable == True and printer['filament_switch_sensor filament_sensor'].filament_detected != True %}
            M117 No filament!
            M118 "Please Insert filament in Sensor!"
            CANCEL_PRINT
        {% endif %}

        {% if printer.extruder.temperature < extruder_target_temp %}
            M117 Nozzle pre-heating...
            RESPOND TYPE=COMMAND MSG="Nozzle pre-heating..."
            M109 S{extruder_target_temp}
        {% endif %}

        {% if printer.toolhead.homed_axes|lower != "xyz" %}
            G28 X Y
            STABLE_Z_HOME
            M400
        {% endif %}
        SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={bed_target_temp}

        #Start exhaust fan
        #SET_FAN_SPEED FAN=exhaust_fan SPEED=1

        {% if printer.heater_bed.temperature < bed_target_temp %}
            M117 Bed heating...
            M190 S{bed_target_temp}
        {% endif %}

        M140 S{bed_target_temp}
        M104 S{extruder_target_temp}

        {% if heatsoak == True %}
            {% set bed_soak_temp = printer['gcode_macro _global_var'].bed_mesh_calibrate_target_temp|int %}
            {% set current_target_temp  = printer.heater_bed.target|int %}
            {% if current_target_temp <= bed_soak_temp %}
                SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={bed_soak_temp}
            {% else %}
                SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={current_target_temp}
            {% endif %}
            M117 Short Heat Soak
            G4 P{heatsoak_time * 60000} # pause for x number of minute(s) (see variable_heat_soak_time)
            M400
        {% endif %}

        M140 S{bed_target_temp}
        M104 S{extruder_target_temp}

        ; Always do this this after CALIBRATE_Z
        {% if bed_target_temp >= 85 %}
            {% set comp = 0.00 %}
        {% elif bed_target_temp >= 60 %}
            {% set comp = 0.00 %}
        {% else %}
            {% set comp = 0.00 %}
        {% endif %}
        M118 Updating Z_ADJUST to {zadjust + comp} (from {zadjust})
        {% set zadjust = zadjust + comp %}
        SET_GCODE_OFFSET Z_ADJUST={zadjust} MOVE=1
        REPORT_Z_OFFSET
        # Z_OFFSET_APPLY_ENDSTOP

        _CLIENT_LINEAR_MOVE X=5 Y=5 F=9000 ABSOLUTE=1
        _CLIENT_LINEAR_MOVE Z=0.3     F=1500 ABSOLUTE=1

        G90 ; set to absolute positioning
        M117 Final Heating...
        RESPOND TYPE=COMMAND MSG="Final Heating..."

        # Be careful with the chamber heater, as its sensor may not be measuring the vicinity of the bed
        # thus causing the heater to run for too long causing issues with several mechanical parts.
        {% if ("gcode_macro _CHAMBER_HEAT_STATE" in printer and printer["gcode_macro _CHAMBER_HEAT_STATE"].enabled is defined) or
            ("heater_generic chamber_heater" in printer.heaters.available_heaters) %}
            {% if chamber_temp != 0 %}
                M117 Chamber heating...
                RESPOND TYPE=COMMAND MSG="Chamber heating..."
                CHAMBER_HEAT_START TARGET={chamber_temp} DELTA=1
                TEMPERATURE_WAIT SENSOR="heater_generic chamber_heater" MINIMUM={chamber_temp-3}
                # TEMPERATURE_WAIT SENSOR="temperature_sensor chamber_sensor" MINIMUM={chamber_temp-3} ; for when using a temperature sensor rather than a heater_generic
            {% else %}
                CHAMBER_HEAT_STOP
            {% endif %}
        {% else %}
            {action_respond_info("Chamber heater not available. Please check your configuration.")}
        {% endif %}

        SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={bedtemp}
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET={hotendtemp}

        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={hotendtemp} MAXIMUM={hotendtemp+3}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={bedtemp - 0.5}

        SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=state VALUE='"Start"'
        UPDATE_DELAYED_GCODE ID=_print_start_wait DURATION=0.5

        SKEW_PROFILE LOAD=my_skew_profile

    {% elif state == 'Start' %}
        M117 Printing
        {action_respond_info("Start!")}
    {% endif %}



[gcode_macro END_PRINT]
description: ends the print
variable_state: 'normal'
gcode:
    {% set z_max = printer['gcode_macro _global_var'].z_maximum_lifting_distance|int %}
    {% set e_mintemp  = printer.configfile.settings['extruder'].min_extrude_temp %}
    {% set hotend_fan_temp = printer.configfile.settings['heater_fan hotend_fan'].heater_temp %}

    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=state VALUE='"Prepare"'
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=record_extruder_temp VALUE=0
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=max_record_extruder_temp VALUE=0

    G91
    {% if printer['filament_switch_sensor filament_sensor'].enable == True and
          printer['filament_switch_sensor filament_sensor'].filament_detected == True
    %}
        {% if (printer.extruder.target != 0 and printer.extruder.temperature >= printer.extruder.target) or
              printer.extruder.temperature >= e_mintemp
        %}
            ;G1 E-2 F2700
            ;G1 E-2 Z0.2 F2400
        {% endif %}
    {% endif %}

    G91 ;Relative positioning
    G1 E-1.5 F3000 ;Retract a bit
    # G1 E-0.5 Z0.2 F2400 ;Retract and raise Z
    G1 X5 Y5 E-0.5 Z0.2 F5000 ;Wipe out

    {% if (printer.gcode_move.position.z + 25) < z_max %}
        G1 Z+25 F3000
    {% else %}
        G1 Z+{(z_max - printer.gcode_move.position.z)} F3000
    {% endif %}
    # G90
    # G1 X235.0 Y310.0 F9000
    _CLIENT_LINEAR_MOVE X=235.0 Y=310.0 F=9000 ABSOLUTE=1

    M106 S255 ;full fan
    G4 P20000 ; wait for 20 seconds
    G1 E-0.5 F2700 ; retract a bit more after cooling for 30 seconds about 20 degrees
    G4 P10000 ; wait for 10 seconds
    G1 E-0.5 F2700 ; retract a bit more after cooling for 30 seconds about 20 degrees

    M400
    # M84 X Y Z E

    M220 S100
    M221 S100

    # CLEAR_PAUSE

    TURN_OFF_HEATERS
    {% set config = printer.configfile.settings %}
    {% set hotend_temp_target = config["heater_fan hotend_fan"].heater_temp %}
    DELAYED_FAN_OFF TARGET={hotend_temp_target}
    SET_SKEW CLEAR=1

    {action_respond_info("Print Done!")}

[delayed_gcode exhaust_fan_off]
gcode:
    SET_FAN_SPEED FAN=exhaust_fan SPEED=0

[gcode_macro _ALL_FAN_OFF]
gcode:
    M106 S0
    # Run the exhaust fan for another 2min after the other fans and then turn it off
    # UPDATE_DELAYED_GCODE ID=exhaust_fan_off DURATION=120
    M107

# Bring the nozzle to the center of the bed
[gcode_macro CENTER]
gcode:
    {% set z = params.Z|default(45)|int %}
    _CLIENT_LINEAR_MOVE X=175 Y=175 Z={z} F=15000 ABSOLUTE=1

[gcode_macro _CALIBRATION_ZOFFSET]
gcode:
    M117 Calibrate Offset
    QUAD_GANTRY_LEVEL
    G28 Z
    M140 S65
    G4 P500
    CLEAN_NOZZLE
    G4 P500
    M117 Z-offset calibration
    Z_OFFSET_CALIBRATION
    Z_OFFSET_APPLY_PROBE
    M400
    G4 P3000
    SAVE_CONFIG

[delayed_gcode _auto_zoffset]
gcode:
    SAVE_VARIABLE VARIABLE=offsetadjust VALUE={'%05.2f' % (0)}
    _CALIBRATION_ZOFFSET

[gcode_macro _Delay_Calibrate]
gcode:
    UPDATE_DELAYED_GCODE ID=_auto_zoffset DURATION=1.0

[delayed_gcode TEST_BELT]
initial_duration: 0.3
gcode:
    {% set x_freq = printer.save_variables.variables.x_freq|float %}
    {% set y_freq = printer.save_variables.variables.y_freq|float %}
    {% set show_freq = printer.save_variables.variables.show_freq %}
    {% if show_freq == 1 %}
        M117 x {x_freq}, y {y_freq}
        SAVE_VARIABLE VARIABLE=show_freq VALUE=0
    {% endif %}

[gcode_macro PROBE_CALIBRATE]
rename_existing:PROBE_CALIBRATE_BASE
gcode:
    {% set current_target_temp  = printer.heater_bed.target|int %}
    {% set z_offset_calibrate_temp = printer['gcode_macro _global_var'].bed_mesh_calibrate_target_temp|int %}

    {action_respond_info("z_offset_calibrate")}
    {% if printer.heater_bed.temperature != z_offset_calibrate_temp %}
        M140 S{z_offset_calibrate_temp}
        {action_respond_info("The bed target temperature was not reached!")}
        {action_respond_info("Bed heating...")}
        M190 S{z_offset_calibrate_temp}
    {% endif %}

    {% if printer.toolhead.homed_axes|lower != "xyz" %}
        G28
    {% endif %}
    PROBE_CALIBRATE_BASE
    TESTZ z=-1

[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_BASE
gcode:
    {% set mesh_name = "default" %}
    {% set mesh_calibrate_temp = printer['gcode_macro _global_var'].bed_mesh_calibrate_target_temp|int %}
    {% set current_target_temp  = printer.heater_bed.target|int %}

    {action_respond_info("BED_MESH_CALIBRATE: Checking Heating!")}
    {% if printer.heater_bed.temperature != mesh_calibrate_temp %}
        {action_respond_info("The bed target temperature was not reached!")}
        {action_respond_info("Heating the bed...")}
        {% if current_target_temp <= mesh_calibrate_temp %}
          M190 S{mesh_calibrate_temp}
        {% else %}
          M190 S{current_target_temp}
        {% endif %}
    {% endif %}

    {% if printer.toolhead.homed_axes|lower != "xyz" %}
        G28
    {% endif %}

    BED_MESH_CLEAR
    DEPLOY_PROBE
    BED_MESH_CALIBRATE_BASE {rawparams}
    STOW_PROBE

    {% if current_target_temp == 0 %}
        M140 S0
    {% endif %}

[gcode_macro BMC_NO_TEMP]
description: BED_MESH_CALIBRATE without bed heating.
gcode:
    {% if printer.toolhead.homed_axes|lower != "xyz" %}
        G28
    {% endif %}
    BED_MESH_CLEAR
    DEPLOY_PROBE
    BED_MESH_CALIBRATE_BASE {rawparams}
    STOW_PROBE

[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing:QUAD_GANTRY_LEVEL_BASE
gcode:
    {% set mesh_name = "default" %}
    {% set mesh_calibrate_temp = printer['gcode_macro _global_var'].bed_mesh_calibrate_target_temp|int %}
    {% set current_target_temp  = printer.heater_bed.target|int %}

    {% if printer.heater_bed.temperature != mesh_calibrate_temp %}
        {action_respond_info("Heating the bed...")}
        {% if current_target_temp <= mesh_calibrate_temp %}
          {% set _bed_temp = mesh_calibrate_temp %}
        {% else %}
          {% set _bed_temp = current_target_temp %}
        {% endif %}
        SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={_bed_temp}
    {% endif %}

    {% if printer.toolhead.homed_axes|lower != "xyz" %}
        G28
    {% endif %}
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={_bed_temp - 2}

    BED_MESH_CLEAR
    SET_GCODE_OFFSET Z=0 MOVE=1
    DEPLOY_PROBE
    BEEPC COUNT=3
    G4 P1000
    QUAD_GANTRY_LEVEL_BASE

    STOW_PROBE
    _CLIENT_LINEAR_MOVE Z=10 F=1500 ABSOLUTE=1

    {% if current_target_temp == 0 %}
        M140 S0
    {% else %}
        SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={current_target_temp}
    {% endif %}

[gcode_macro QGL]
description: QGL without bed heating.
gcode:
    BED_MESH_CLEAR
    SET_GCODE_OFFSET Z=0 MOVE=1
    {% if printer.toolhead.homed_axes|lower != "xyz" %}
        G28
    {% endif %}
    BEEPC COUNT=3
    G4 P250
    DEPLOY_PROBE
    QUAD_GANTRY_LEVEL_BASE
    STOW_PROBE
    G28 Z ; STABLE_Z_HOME
    M400

[gcode_macro G34]
description: QGL with bed heating for Marlin
gcode:
    BED_MESH_CLEAR
    SET_GCODE_OFFSET Z=0 MOVE=1
    {% if printer.toolhead.homed_axes|lower != "xyz" %}
      G28
    {% endif %}
    QUAD_GANTRY_LEVEL
    G28 Z
    G0 X175 Y175 Z30 F3600

# [delayed_gcode bed_mesh_init]
# initial_duration: .01
# gcode:
#     BED_MESH_PROFILE LOAD=default

[delayed_gcode _print_start_wait]
gcode:
    {% if printer['gcode_macro START_PRINT'].state == 'Heating'%}
        {action_respond_info("Prepare->Heating!")}
    {% elif printer['gcode_macro START_PRINT'].state == 'Start' %}
        {action_respond_info("Heating->Start!")}
    {% endif %}

    {% if printer['gcode_macro START_PRINT'].execute|lower != 'false' %}
        START_PRINT
    {% endif %}


[gcode_macro CANCEL_PRINT]
description: Cancels the print
rename_existing: CANCEL_PRINT_BASE
gcode:
    {% set x_park = printer['gcode_macro _global_var'].cancel_park.x|float %}
    {% set y_park = printer['gcode_macro _global_var'].cancel_park.y|float %}
    {% set z_park = printer['gcode_macro _global_var'].cancel_park.z|float %}
    {% set z_lift_max = printer['gcode_macro _global_var'].z_maximum_lifting_distance %}
    {% set e_restract = printer['gcode_macro _global_var'].cancel_park.e|float %}
    {% set e_mintemp  = printer.configfile.settings['extruder'].min_extrude_temp %}

    CANCEL_PRINT_BASE

    M117 Print canceled!
    G91
    {% if printer['filament_switch_sensor filament_sensor'].enabled == True and
          printer['filament_switch_sensor filament_sensor'].filament_detected == True
    %}
        {% if (printer.extruder.target != 0 and printer.extruder.temperature >= printer.extruder.target) or
              printer.extruder.temperature >= e_mintemp
        %}
            G1 E-{e_restract} F500
        {% else %}
            {action_respond_info("Nozzle not hot enough")}
        {% endif %}
    {% endif %}

    {%if (printer.gcode_move.position.z + 10) < z_lift_max %}
        G1 Z+10 F3000
    {% else %}
        G1 Z+{(z_lift_max - printer.gcode_move.position.z)} F3000
    {% endif %}
        G90
        G1 X{x_park} Y{y_park} F9000

    CHAMBER_HEAT_STOP
    TURN_OFF_HEATERS
    _ALL_FAN_OFF

    CLEAR_PAUSE
    # M84 X Y Z E

    M117 Ready
    {action_respond_info("Cancel Print Success!")}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=state VALUE='"Prepare"'
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=record_extruder_temp VALUE=0
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=max_record_extruder_temp VALUE=0


[gcode_macro PAUSE]
rename_existing: PAUSE_BASE
variable_state: 'normal'
gcode:
    {% if printer.pause_resume.is_paused == False %}
        {% set x_park = printer['gcode_macro _global_var'].pause_park.x|float %}
        {% set y_park = printer['gcode_macro _global_var'].pause_park.y|float %}
        {% set e_restract = printer['gcode_macro _global_var'].pause_park.e|float %}
        {% set z_lift_max = printer['gcode_macro _global_var'].z_maximum_lifting_distance %}

        {% set state = params.STATE if 'filament_change' in params.STATE else 'normal' %}

        {action_respond_info("Pause Print!")}

        PAUSE_BASE
        M117 Pause Print!!!
        G91
        {% if (printer.gcode_move.position.z + 5) < z_lift_max %}
            G1 Z+5 F3000
        {% else %}
            G1 Z+{(z_lift_max - printer.gcode_move.position.z)} F3000
        {% endif %}
        G90
        {% if printer.gcode_move.position.x != x_park and
                printer.gcode_move.position.y != y_park
        %}
            G1 X{x_park} Y{y_park} F{printer["gcode_macro _global_var"].pause_resume_travel_speed * 60}
        {% endif %}

        M104 S{printer.extruder.target}

        {% if state == 'normal' %}
            {% if (printer.extruder.temperature + 5 >= printer.extruder.target) and (printer.extruder.temperature >= printer.configfile.settings['extruder'].min_extrude_temp) %}
                {% if printer['filament_switch_sensor filament_sensor'].enabled == True and
                    printer['filament_switch_sensor filament_sensor'].filament_detected == True
                %}
                    G91
                    G1 E-{e_restract} F300
                    G90
                {% elif printer['filament_switch_sensor filament_sensor'].enabled == True and
                        printer['filament_switch_sensor filament_sensor'].filament_detected != True %}
                    G91
                    G1 E+95 F300
                    G1 E-10 F1500
                    G1 E-20 F600
                    M400
                    G4 P3000
                    G1 E-50 F300
                    G90
                {% endif %}
            {% endif %}
        {% elif state == 'filament_change' %}
            {% if (printer.extruder.temperature + 5 >= printer.extruder.target) and (printer.extruder.temperature >= printer.configfile.settings['extruder'].min_extrude_temp) %}
                G91
                G1 E+25 F300
                G1 E-10 F1500
                G1 E-20 F600
                M400
                G4 P3000
                G1 E-50 F300
                G90
            {% endif %}
        {% endif %}
    {% endif %}


[delayed_gcode _resume_wait]
gcode:
    {% if printer['gcode_macro RESUME'].execute|lower != 'false' %}
        RESUME
    {% endif %}


[gcode_macro RESUME]
description: Resume the print
rename_existing: RESUME_BASE
variable_state: 'normal'
gcode:
    {% set e_restract = printer['gcode_macro _global_var'].pause_park.e|float %}
    {% set extruder_target_temp = printer.extruder.target|int %}

    {% set state = params.STATE if 'filament_change' in params.STATE else 'normal' %}

    {% if state == 'filament_change' %}
        {% if printer["filament_switch_sensor filament_sensor"].enable == True and
              printer["filament_switch_sensor filament_sensor"].filament_detected != True
        %}
            {action_respond_info("Please Insert filament in Sensor!")}
        {% else %}
            {% if printer.extruder.temperature + 5 >= printer.extruder.target %}
                G91
                G1 E30 F300
                G1 E10 F150
                G90
            {% else %}
                M104 S{extruder_target_temp}
                {action_respond_info("Nozzle not hot enough!")}
                {action_respond_info("Nozzle heating...")}
                M109 S{extruder_target_temp}
                G91
                G1 E30 F300
                G1 E10 F150
                G90
            {% endif %}
            {action_respond_info("Print resumming!")}
            RESUME_BASE
        {% endif %}
    {% elif state == 'normal' %}
        {% if printer['filament_switch_sensor filament_sensor'].enable != True and
              printer['filament_switch_sensor filament_sensor'].filament_detected != True
        %}
            {action_respond_info("Please Insert filament in Sensor!")}
        {% else %}
            {action_respond_info("Print resumming!")}
            G91
            G1 E{e_restract} F300
            G90
            M117 Printing now!!!
            RESUME_BASE
        {% endif %}
    {% endif %}


[gcode_macro LOAD_FILAMENT]
description: Loads filament (heats nozzle to TEMP if set, otherwise uses the extruder temperature set in the global variables)
gcode:
    {% set extruder_temp = printer['gcode_macro _global_var'].load_filament_extruder_temp|int %}
    {% set current_target_temp  = printer.extruder.target|int %}
    {% set temp = params.TEMP|default(extruder_temp)|int %}

    {% if printer.print_stats.state != "printing" %}
        {% if printer.print_stats.state != "paused" %}
            M104 S{temp}
            M117 Nozzle heating...
            {action_respond_info("Nozzle heating to {}...".format(temp))}
            M109 S{temp}
        {% else %}
            {% set current_target_temp  = printer.extruder.target|int %}
            {% if current_target_temp != 0 and current_target_temp > extruder_temp %}
                {% set temp = current_target_temp %}
            {% else %}
                {% set temp = extruder_temp %}
            {% endif %}
            M104 S{temp}
            M117 Nozzle heating...
            {action_respond_info("(Paused) Nozzle heating to {}...".format(temp))}
            M109 S{temp}
        {% endif %}
        M400
        M117 Extruding...
        SAVE_GCODE_STATE NAME=_LOAD_FILAMENT
        G91
        G1 E75 F300
        G1 E30 F150
        G1 E-2 F300
        G90
        M400
        RESTORE_GCODE_STATE NAME=_LOAD_FILAMENT
        M117 Filament loaded.
        M400
        {% if current_target_temp == 0 or printer.print_stats.state != "paused"%}
            M104 S0
        {% endif %}
    {% else %}
        {action_respond_info("Don't load filament during printing!!!")}
    {% endif %}


[gcode_macro UNLOAD_FILAMENT]
description: Unloads filament (heats nozzle to TEMP if set, otherwise uses the extruder temperature set in the global variables)
gcode:
    {% set extruder_temp = printer['gcode_macro _global_var'].load_filament_extruder_temp|int %}
    {% set current_target_temp  = printer.extruder.target|int %}
    {% set temp = params.TEMP|default(extruder_temp)|int %}

    {% if printer.print_stats.state != "printing" %}
        {% if printer.print_stats.state != "paused" %}
            M104 S{temp}
            M117 Nozzle heating...
            {action_respond_info("Nozzle heating to {}...".format(temp))}
            M109 S{temp}
        {% else %}
            {% set current_target_temp  = printer.extruder.target|int %}
            {% if current_target_temp != 0 and current_target_temp > extruder_temp %}
                {% set temp = current_target_temp %}
            {% else %}
                {% set temp = extruder_temp %}
            {% endif %}
            M104 S{temp}
            M117 Nozzle heating...
            {action_respond_info("(Paused) Nozzle heating to {}...".format(temp))}
            M109 S{temp}
        {% endif %}
        M400
        M117 Retracting...
        SAVE_GCODE_STATE NAME=_UNLOAD_FILAMENT
        G91
        G1 E+25 F300
        G1 E-10 F1500
        G1 E-20 F600
        M400
        G4 P3000
        G1 E-50 F300
        G90
        RESTORE_GCODE_STATE NAME=_UNLOAD_FILAMENT
        M117 Filament ejected.
        M400
        {% if current_target_temp == 0 or printer.print_stats.state != "paused"%}
            M104 S0
        {% endif %}
    {% else %}
        {action_respond_info("Don't unload filament during printing!!!")}
    {% endif %}
