[temperature_sensor chamber_temp]
sensor_type: Generic 3950
sensor_pin: expander:PA6
pullup_resistor: 4700
min_temp: 0
max_temp: 80

[output_pin chamber_heater_pin]
pin: expander:PA1
pwm: False
value: 0

[gcode_macro CHAMBER_HEAT_STATE]
variable_enabled: 0
variable_target: 40.0
variable_delta: 5.0
variable_last_temp: 0
variable_last_state: "off"
variable_safety_limit: 65
gcode:
    RESPOND MSG="Use CHAMBER_HEAT_START TARGET=<temp> [DELTA=<hyst>] to start"

[delayed_gcode chamber_heat_loop]
initial_duration: 10
gcode:
  {% set enabled = printer["gcode_macro CHAMBER_HEAT_STATE"].enabled|default(0)|int %}
  {% if not enabled %}
    # Not active, do nothing
    UPDATE_DELAYED_GCODE ID=chamber_heat_loop DURATION=0
  {% else %}
    {% set temp = printer["temperature_sensor chamber_temp"].temperature|default(0)|float %}
    {% set target = printer["gcode_macro CHAMBER_HEAT_STATE"].target %}
    {% set delta = printer["gcode_macro CHAMBER_HEAT_STATE"].delta %}
    {% set last_state = printer["gcode_macro CHAMBER_HEAT_STATE"].last_state|default("off") %}
    {% set safety_limit = printer["gcode_macro CHAMBER_HEAT_STATE"].safety_limit|default(65) %}
    # Save last temp
    SET_GCODE_VARIABLE MACRO=CHAMBER_HEAT_STATE VARIABLE=last_temp VALUE={temp}
    # Heater logic
    {% if temp < (target - delta) %}
      SET_PIN PIN=chamber_heater_pin VALUE=1
      SET_GCODE_VARIABLE MACRO=CHAMBER_HEAT_STATE VARIABLE=last_state VALUE='"on"'
    {% elif temp > (target + delta) %}
      SET_PIN PIN=chamber_heater_pin VALUE=0
      {% if last_state == "on" %}
        RESPOND MSG="Chamber target reached {target}째"
      {% endif %}
      SET_GCODE_VARIABLE MACRO=CHAMBER_HEAT_STATE VARIABLE=last_state VALUE='"off"'
      {% if temp > safety_limit %}
        RESPOND MSG="WARNING: Chamber temp high ({temp}째C) with heater off!"
        BEEPC COUNT=6
      {% endif %}
    {% else %}
      # Maintain current state
      SET_PIN PIN=chamber_heater_pin VALUE={1 if last_state == "on" else 0}
    {% endif %}
    UPDATE_DELAYED_GCODE ID=chamber_heat_loop DURATION=10
  {% endif %}

[gcode_macro CHAMBER_HEAT_START]
description: Start chamber heater loop with TARGET temp and optional DELTA hysteresis
gcode:
  {% set target = params.TARGET|float %}
  {% set delta = params.DELTA|default(5.0)|float %}
  {% set safety_limit = printer["gcode_macro CHAMBER_HEAT_STATE"].safety_limit|default(65) %}
  {% if target > safety_limit %}
    SET_GCODE_VARIABLE MACRO=CHAMBER_HEAT_STATE VARIABLE=enabled VALUE=0
    UPDATE_DELAYED_GCODE ID=chamber_heat_loop DURATION=0
    {action_raise_error("Target temp is above safety limit of {}째C".format(safety_limit))} 
  {% endif %}
  SET_GCODE_VARIABLE MACRO=CHAMBER_HEAT_STATE VARIABLE=enabled VALUE=1
  SET_GCODE_VARIABLE MACRO=CHAMBER_HEAT_STATE VARIABLE=target VALUE={target}
  SET_GCODE_VARIABLE MACRO=CHAMBER_HEAT_STATE VARIABLE=delta VALUE={delta}
  RESPOND MSG="Chamber control started (target={target}째C, delta={delta})"
  UPDATE_DELAYED_GCODE ID=chamber_heat_loop DURATION=1


[gcode_macro CHAMBER_HEAT_STOP]
description: Stop chamber heater loop
gcode:
  SET_GCODE_VARIABLE MACRO=CHAMBER_HEAT_STATE VARIABLE=enabled VALUE=0
  SET_GCODE_VARIABLE MACRO=CHAMBER_HEAT_STATE VARIABLE=last_state VALUE='"off"'
  SET_PIN PIN=chamber_heater_pin VALUE=0
  RESPOND MSG="Chamber heater control stopped"
  M117 Chamber heater control stopped
  UPDATE_DELAYED_GCODE ID=chamber_heat_loop DURATION=0
