[gcode_macro KEEP_ALIVE]
gcode:
  UPDATE_DELAYED_GCODE ID=keep_alive DURATION=60  ; Reschedule itself every 60 seconds

# START_GRADUAL_COOLING START=<bed_temperature> TARGET=<final_temperature> STEP=<temperature_decrement> INTERVAL=<time_between_decrements in seconds> RETRY_MAX=2
[gcode_macro START_GRADUAL_COOLING]
description: Initiates gradual bed cooling immediately START TARGET STEP INTERVAL RETRY_MAX
gcode:
  {% set target_temp = params.TARGET|default(40)|int %}
  {% set step_temp = params.STEP|default(5)|int %}
  {% set interval = params.INTERVAL|default(300)|int %}
  # {% set initial_temp = printer.heater_bed.target %}
  {% set initial_temp = params.START|int %}
  {% set first_temp = initial_temp - step_temp %}

  {% if initial_temp > target_temp %}
    M106 S0 ;turn off part cooling fan
    M118 Starting gradual bed cooling from {initial_temp}°C to {target_temp}°C. ({interval}s intervals)

    ; Set the first temperature step immediately
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={first_temp}
    M118 First temperature step applied: {first_temp}°C.

    ; Store variables for later steps
    SET_GCODE_VARIABLE MACRO=EXECUTE_GRADUAL_COOLING VARIABLE=target VALUE={target_temp}
    SET_GCODE_VARIABLE MACRO=EXECUTE_GRADUAL_COOLING VARIABLE=step VALUE={step_temp}
    SET_GCODE_VARIABLE MACRO=EXECUTE_GRADUAL_COOLING VARIABLE=interval VALUE={interval}

    ; Schedule the next temperature step
    UPDATE_DELAYED_GCODE ID=gradual_cooling DURATION={interval}
  {% else %}
    M118 Bed temperature is already at or below the target of {target_temp}°C.
    # M106 S255 ;full fan before turning off
    CHAMBER_HEAT_STOP
    POWER_OFF_PRINTER MAX_TEMP=65
  {% endif %}

[gcode_macro EXECUTE_GRADUAL_COOLING]
variable_target: 40
variable_step: 5
variable_interval: 300
variable_retry_count: 0
variable_retry_max: 2
gcode:
  {% set current_temp = printer.heater_bed.temperature %}
  {% set last_set_temp = printer.heater_bed.target %}
  {% set next_temp = last_set_temp - step %}
  {% set retry_count = retry_count|int %}

  {% set _chamber_macro_exists = ("gcode_macro _CHAMBER_HEAT_STATE" in printer and printer["gcode_macro _CHAMBER_HEAT_STATE"].enabled is defined) or ("heater_generic chamber_heater" in printer.heaters.available_heaters) %}

  # Leaving the chamber heater on will cause the bed to not cool down properly at lower temperatures
  {% if _chamber_macro_exists %}
    {% if current_temp <= 60 %}
      CHAMBER_HEAT_STOP
    {% endif %} 
  {% endif %}

  {% if current_temp <= last_set_temp + 0.5 or retry_count >= retry_max %}

    ; Apply next temperature step or force it after retries
    {% if last_set_temp > target %}
      M140 S{next_temp}
      M118 Bed temperature step applied: {next_temp}°C. Next check in {interval} seconds.
      SET_GCODE_VARIABLE MACRO=EXECUTE_GRADUAL_COOLING VARIABLE=retry_count VALUE=0  ; reset retries
      UPDATE_DELAYED_GCODE ID=gradual_cooling DURATION={interval}
    {% else %}
      M140 S0
      M118 Bed temperature has reached the final target of {target}°C. Heater bed is now OFF.
      UPDATE_DELAYED_GCODE ID=keep_alive_loop DURATION=0
      SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=0
      # TURN_OFF_HEATERS
      _ALL_FAN_OFF
      BEEPC COUNT=2
      {% if _chamber_macro_exists %}
        CHAMBER_HEAT_STOP
      {% endif %}
      POWER_OFF_PRINTER MAX_TEMP=65
    {% endif %}

  {% else %}
    ; Bed still cooling, increase retry counter
    {% set new_retry_count = retry_count + 1 %}
    SET_GCODE_VARIABLE MACRO=EXECUTE_GRADUAL_COOLING VARIABLE=retry_count VALUE={new_retry_count}
    M118 Skipping temperature step (retry {new_retry_count}/{retry_max}). Current: {current_temp}°C, last set: {last_set_temp}°C.
    UPDATE_DELAYED_GCODE ID=gradual_cooling DURATION={interval}
  {% endif %}


[delayed_gcode gradual_cooling]
gcode:
  EXECUTE_GRADUAL_COOLING

[delayed_gcode keep_alive_loop]
gcode:
  KEEP_ALIVE

[gcode_macro ANNEAL_PART]
description: Used for annealing post-print if the part is still securely glued to bed
gcode:
  M118 Annealing started.
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=110
  M118 Holding at 110C for 90 minutes
  G4 P5400000  ; 90 minutes
  M118 Starting cooldown
  {% for temp in range(100, 39, -10) %}
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={ temp }
    M118 Holding at {temp} for 10 minutes
    G4 P600000  ; 10 minutes
  {% endfor %}
  M118 Annealing complete.

[gcode_macro _GRADUAL_BED_COOLDOWN]
description: Hold bed at 90°C for 20 min, then step down to 50°C in 10°C steps every 10 min
gcode:
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=90
  G4 P1200000  ; Wait 20 min

  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=80
  G4 P600000  ; Wait 10 min

  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=70
  G4 P600000

  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=60
  G4 P600000

  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=50
  G4 P600000
  {% if printer["gcode_macro CHAMBER_HEAT_START"] %}
    M177 YESS
    CHAMBER_HEAT_STOP
  {% endif %}

[gcode_macro GRADUAL_COOLDOWN_STATE]
description: Temperature lookups and duration for gradual cooldown process
variable_step_index: 0
# variable_targets:   [107, 104, 100, 95, 90, 85, 80, 75, 70, 65, 60, 55, 50]
# variable_durations: [  5,   5,   5, 10, 20,  5,  5,  5, 10, 10, 10, 10, 10]
variable_targets:   [90, 75, 70, 65, 60, 55, 50]
variable_durations: [ 5,  5, 20,  5, 20,  5,  5]
# variable_durations: [1, 1, 1, 1, 1, 1, 1, 1]
gcode:

[delayed_gcode gradual_cooldown_step]
gcode:
  {% set state = printer["gcode_macro GRADUAL_COOLDOWN_STATE"] %}
  {% set idx = state.step_index %}
  {% set targets = state.targets %}
  {% set durations = state.durations %}

  {% if idx < targets|length %}
    {% set temp = targets[idx] %}
    {% set mins = durations[idx] %}
    M118 Cooldown step {idx + 1}/{targets|length} → {temp}°C for {mins} min
    SOAK_WAIT TARGET={temp} MINUTE={mins} SERVOS=1
    ############
    SET_GCODE_VARIABLE MACRO=SOAK_WAIT VARIABLE=ignore_soak_wait VALUE=1
    ############
    SET_GCODE_VARIABLE MACRO=GRADUAL_COOLDOWN_STATE VARIABLE=step_index VALUE={idx + 1}
    UPDATE_DELAYED_GCODE ID=gradual_cooldown_step DURATION={mins * 60}
    CHAMBER_HEAT_START TARGET=52
    {% if temp <= 75 %}
      M118 Turning off chamber heater at temp {temp}
      CHAMBER_HEAT_STOP
    {% endif %}
  {% else %}
    M118 Gradual cooldown complete
    M118 Stopping chamber heater
    SOAK_WAIT STOP=1
    CHAMBER_HEAT_STOP
    SET_GCODE_VARIABLE MACRO=GRADUAL_COOLDOWN_STATE VARIABLE=step_index VALUE=0
    UPDATE_DELAYED_GCODE ID=gradual_cooldown_step DURATION=0
  {% endif %}

[gcode_macro CONTROLLED_BED_COOLDOWN]
description: Controlled bed cooldown using table lookups for temperatures
gcode:
  M118 Starting gradual bed cooldown
  SET_GCODE_VARIABLE MACRO=GRADUAL_COOLDOWN_STATE VARIABLE=step_index VALUE=0
  UPDATE_DELAYED_GCODE ID=gradual_cooldown_step DURATION=1


[gcode_macro wtf]
description: Debug macro to test various things
gcode:
  {% set enabled = printer["gcode_macro CHAMBER_HEAT_STATE"].enabled is defined %}
  {action_respond_info("the var of another gcode_macro is retrieved as .{}. and isempty() is .{}.".format(enabled, enabled is defined))}
  {% if enabled is defined and enabled %}
    RESPOND MSG="Chamber heater is enabled, stopping it now."
    CHAMBER_HEAT_STOP
  {% else %}
    RESPOND MSG="Chamber heater is NOT enabled, starting it now."
    CHAMBER_HEAT_STOP
  {% endif %}
