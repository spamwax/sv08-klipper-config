# --- Put these in printer.cfg -----------------------------------------------

# Your LED (you already have this)
#[led main_led]
#white_pin: PD15
#cycle_time: 0.010
#hardware_pwm: True
#initial_WHITE: 1.0

# LED_BREATHE_START MIN=0.1 MAX=1.0 STEP=0.1 TICK=0.5
# LED_BREATHE_START MIN=0.05 MAX=0.65 STEP=0.05 TICK=0.02
[gcode_macro LED_BREATHE_START]
description: "Start non-blocking breathing effect on main_led"
# State & tunables (defaults; can be overridden by params)
variable_enabled: 0
variable_level: 0.0      # current brightness (0.0..1.0)
variable_dir: 1          # +1 up, -1 down
variable_min: 0.10       # lowest brightness
variable_max: 1.00       # highest brightness
variable_step: 0.02      # change per tick
variable_tick: 0.05      # seconds between steps
gcode:
  {% set m = printer["gcode_macro LED_BREATHE_START"] %}

  # Allow parameter overrides: MIN, MAX, STEP, TICK, START (initial level), DURATION
  {% set min = (params.MIN|default(m.min))|float %}
  {% set max = (params.MAX|default(m.max))|float %}
  {% set step = (params.STEP|default(m.step))|float %}
  {% set tick = (params.TICK|default(m.tick))|float %}
  {% set start = (params.START|default(min))|float %}

  # Clamp and sanitize
  {% set min = [0.0, [min, 1.0]|min]|max %}
  {% set max = [0.0, [max, 1.0]|min]|max %}
  {% if max < min %}
    {% set tmp = min %}{% set min = max %}{% set max = tmp %}
  {% endif %}
  {% set start = [min, [start, max]|min]|max %}
  {% set step = [0.001, step]|max %}
  {% set tick = [0.01, tick]|max %}

  SET_GCODE_VARIABLE MACRO=LED_BREATHE_START VARIABLE=enabled VALUE=1
  SET_GCODE_VARIABLE MACRO=LED_BREATHE_START VARIABLE=min VALUE={min}
  SET_GCODE_VARIABLE MACRO=LED_BREATHE_START VARIABLE=max VALUE={max}
  SET_GCODE_VARIABLE MACRO=LED_BREATHE_START VARIABLE=step VALUE={step}
  SET_GCODE_VARIABLE MACRO=LED_BREATHE_START VARIABLE=tick VALUE={tick}
  SET_GCODE_VARIABLE MACRO=LED_BREATHE_START VARIABLE=level VALUE={start}
  SET_GCODE_VARIABLE MACRO=LED_BREATHE_START VARIABLE=dir VALUE=1

  # Apply initial level immediately
  SET_LED LED=main_led WHITE={start} TRANSMIT=1

  # Kick the timer loop (must be >0; zero cancels the timer)
  UPDATE_DELAYED_GCODE ID=led_breathe_tick DURATION=0.01

  # Optional auto-stop duration (in seconds)
  {% if params.DURATION is defined %}
    UPDATE_DELAYED_GCODE ID=led_breathe_autostop DURATION={(params.DURATION|float)}
  {% endif %}

[delayed_gcode led_breathe_tick]
gcode:
  {% set s = printer["gcode_macro LED_BREATHE_START"] %}
  {% if s.enabled|int == 1 %}
    {% set next = s.level + s.dir * s.step %}
    {% set dir = s.dir %}
    {% if next >= s.max %}
      {% set next = s.max %}
      {% set dir = -1 %}
    {% elif next <= s.min %}
      {% set next = s.min %}
      {% set dir = 1 %}
    {% endif %}

    SET_LED LED=main_led WHITE={next} TRANSMIT=1
    SET_GCODE_VARIABLE MACRO=LED_BREATHE_START VARIABLE=level VALUE={"%.5f"|format(next)}
    SET_GCODE_VARIABLE MACRO=LED_BREATHE_START VARIABLE=dir VALUE={dir}

    # Re-arm the tick (non-blocking)
    UPDATE_DELAYED_GCODE ID=led_breathe_tick DURATION={s.tick}
  {% endif %}

[delayed_gcode led_breathe_autostop]
gcode:
  LED_BREATHE_STOP

[gcode_macro LED_BREATHE_STOP]
description: "Stop breathing effect on main_led and set steady brightness"
# You can choose the final brightness via WHITE=...
gcode:
  SET_GCODE_VARIABLE MACRO=LED_BREATHE_START VARIABLE=enabled VALUE=0
  UPDATE_DELAYED_GCODE ID=led_breathe_tick DURATION=0
  # Default to steady ON unless overridden
  {% set final = (params.WHITE|default(1.0))|float %}
  {% set final = [0.0, [final, 1.0]|min]|max %}
  SET_LED LED=main_led WHITE={final} TRANSMIT=1
