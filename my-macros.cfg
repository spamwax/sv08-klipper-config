[gcode_macro FULL_HOME]
description: Full homing and quad gantry leveling combined
gcode:
    G28
    _QGL
    MY_BED_MESH_CALIBRATE ADAPTIVE=1 mesh_min=100,100 mesh_max=250,250 probe_count=4 mesh_pps=1,1

[gcode_macro BEEPC]
description: Beep COUNT times
gcode:
    {% set count = params.COUNT|default(1)|int %}
    {% for i in range(count) %}
        BEEP
        G4 P350
    {% endfor %}

[delayed_gcode _check_idle_soaking]
# initial_duration: 2
gcode:
    {% set soaking_active = printer["gcode_macro SOAK_WAIT"].active %}
    {% set counter        = printer["gcode_macro SOAK_WAIT"].count  %}
    {% set minutes        = printer["gcode_macro SOAK_WAIT"].minutes %}
    {% set soak_temp      = printer["gcode_macro SOAK_WAIT"].soak_temp %}
    {% set ignore_soak_wait = printer["gcode_macro SOAK_WAIT"].ignore_soak_wait %}
    {% set interval = printer["gcode_macro SOAK_WAIT"].interval %}
    {% if counter * interval <= minutes * 60 and soaking_active == 1 %}
        SET_GCODE_VARIABLE MACRO=SOAK_WAIT VARIABLE=count VALUE={counter+1}
    {% elif counter * interval > minutes * 60 and soaking_active == 1 and ignore_soak_wait == 0 %}
        {% set soaking_active = 0 %}
    {% endif %}

    {% if (soaking_active == 1) and (ignore_soak_wait == 0) %}
        {% if printer.heater_bed.target|int != soak_temp %}
            M118 {"‚ùó‚ùóBed target and SOAK_WAIT temperature are different: {} != {}‚ùó‚ùó".format(printer.heater_bed.target|int, soak_temp)}
        {% endif %}
        SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={soak_temp}
        UPDATE_DELAYED_GCODE ID=_check_idle_soaking DURATION={interval}
    {% else %}
        {% if ignore_soak_wait == 0 %}
            M118 ‚ùó SOAK_WAIT is turning off the heaters ‚ùó
            SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=0
            # TURN_OFF_HEATERS
        {% else %}
            M118 ü•¥ START_PRINT/CONTROLLED_BED_COOLDOWN macro is disabling us! ü•¥
        {% endif %}
        SET_GCODE_VARIABLE MACRO=SOAK_WAIT VARIABLE=active VALUE=0
        SET_GCODE_VARIABLE MACRO=SOAK_WAIT VARIABLE=count VALUE=0
        SET_GCODE_VARIABLE MACRO=SOAK_WAIT VARIABLE=minutes VALUE=0
        ##### Reset idle timeout?
        M117
        G4 P0
        #####
        {% if ignore_soak_wait == 0 %}
            M118 Turned off the heaters
            BEEPC COUNT=2
        {% endif %}

    {% endif %}


[gcode_macro SOAK_WAIT]
description: SOAK_WAIT TARGET=<temp> MINUTE=<duration> [STOP=0 SERVOS=0] ‚Äî keeps the bed heated for <duration> minutes (default: 30); add SERVOS=1 to keep motors enabled after soaking.
variable_active: 0
variable_count: 0
variable_minutes: 0
variable_interval: 10
variable_ignore_soak_wait: 0
variable_soak_temp: 0
variable_disable_servos: 1
gcode:
    {action_respond_info("ü´®ü´® SOAK_WAIT ü´®ü´®")}
    {% set interval = printer["gcode_macro SOAK_WAIT"].interval %}
    {% set mesh_calibrate_temp = printer['gcode_macro _global_var'].bed_mesh_calibrate_target_temp|int %}
    {% set current_target_temp  = printer.heater_bed.target|int %}
    {% set target_temp = params.TARGET|default(0)|int %}
    {% set bmode = params.BATCH_MODE|default(0)|int %}

    SET_GCODE_VARIABLE MACRO=SOAK_WAIT VARIABLE=active VALUE=0
    SET_GCODE_VARIABLE MACRO=SOAK_WAIT VARIABLE=count VALUE=0
    SET_GCODE_VARIABLE MACRO=SOAK_WAIT VARIABLE=minutes VALUE=0
    SET_GCODE_VARIABLE MACRO=SOAK_WAIT VARIABLE=ignore_soak_wait VALUE=0

    {% if params.MINUTE is defined %}
        {% set heatsoak_time = params.MINUTE|default(10)|int %}
    {% else %}
        {% set heatsoak_time = 30 %}
    {% endif %}
    {% set disable_servos = 1 %}
    {% if params.SERVOS is defined and params.SERVOS|int == 1 %}
        {% set disable_servos = 0 %}
    {% endif %}
    SET_GCODE_VARIABLE MACRO=SOAK_WAIT VARIABLE=disable_servos VALUE={disable_servos}

    {% if params.STOP is defined %}
        SET_GCODE_VARIABLE MACRO=SOAK_WAIT VARIABLE=active VALUE=0
        SET_GCODE_VARIABLE MACRO=SOAK_WAIT VARIABLE=count VALUE=0
        SET_GCODE_VARIABLE MACRO=SOAK_WAIT VARIABLE=minutes VALUE=0
        SET_GCODE_VARIABLE MACRO=SOAK_WAIT VARIABLE=ignore_soak_wait VALUE=0
        SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=0
        # TURN_OFF_HEATERS
        UPDATE_DELAYED_GCODE ID=_check_idle_soaking DURATION=1
    {% else %}
        BEEPC COUNT=1
        {% if params.TARGET is defined %}
            SET_GCODE_VARIABLE MACRO=SOAK_WAIT VARIABLE=soak_temp VALUE={target_temp}
            {% set _temp = target_temp %}
        {% elif current_target_temp != 0 %}
            SET_GCODE_VARIABLE MACRO=SOAK_WAIT VARIABLE=soak_temp VALUE={current_target_temp}
            {% set _temp = current_target_temp %}
        {% else %}
            SET_GCODE_VARIABLE MACRO=SOAK_WAIT VARIABLE=soak_temp VALUE={mesh_calibrate_temp}
            {% set _temp = mesh_calibrate_temp %}
        {% endif %} 
        M118 {"Soaking {} min. at {}¬∞C...".format(heatsoak_time, _temp)}
        SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={_temp}
        G4 P250
        SET_GCODE_VARIABLE MACRO=SOAK_WAIT VARIABLE=active VALUE=1
        SET_GCODE_VARIABLE MACRO=SOAK_WAIT VARIABLE=minutes VALUE={heatsoak_time}
        SET_GCODE_VARIABLE MACRO=SOAK_WAIT VARIABLE=ignore_soak_wait VALUE=0
        G4 P2000
        UPDATE_DELAYED_GCODE ID=_check_idle_soaking DURATION=1
        M400
        {% if printer.toolhead.homed_axes|lower == "xyz" %}
            _CLIENT_LINEAR_MOVE Z=30 F=1500 ABSOLUTE=1
            _CLIENT_LINEAR_MOVE X=177.5 Y=177.5 F=12000 ABSOLUTE=1
        {% endif %}
        {% if disable_servos == 1 %}
            M84
        {% endif %}
    {% endif %}


[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}

    # RESPOND MSG="üü¢ Substituting ->M109 {rawparams}<- with: M104 {% for p in params if p != params.keys()|list|first %}{'%s%s ' % (p, params[p])}{% endfor %}"
    M104 {% for p in params if p != params.keys()|list|first %}{'%s%s ' % (p, params[p])}{% endfor %} ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   ; Wait for hotend temp (within 1 degree)
    {% endif %}

[gcode_macro M190]
rename_existing: M99190
gcode:
    #Parameters
    {% set s = params.S|default(0.0)|float %}

    # RESPOND MSG="üü¢ Substituting ->M190 {rawparams}<- with: M140 {% for p in params if p != params.keys()|list|first %}{'%s%s ' % (p, params[p])}{% endfor %}"
    M140 {% for p in params if p != params.keys()|list|first %}{'%s%s ' % (p, params[p])}{% endfor %}
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={ s - 1.0 } MAXIMUM={ s + 3 }  ; Wait for bed temp (within 1 degree)
    {% endif %}

[gcode_macro M600]
gcode:
    PAUSE STATE=filament_change

[gcode_macro _SLOW_CLEAN_NOZZLE]
gcode:
    G1 X352 F4500
    G1 Y360 X324
    G1 Y360 X345
    G1 Y360 X324
    G1 Y360 X345
    G1 Y360 X324
    G1 Y360 X345
    G1 Y360 X324
    G1 Y360 X345
    G1 Y360 X324
    G1 Y360 X345
    G1 Y356 X324 Z5

[gcode_macro _FAST_CLEAN_NOZZLE]
gcode:
    G1 Y360 X324
    G1 Y357 X326
    G1 Y360 X326
    G1 Y357 X328
    G1 Y360 X330
    G1 Y357 X332
    G1 Y360 X334
    G1 Y357 X336
    G1 Y360 X338
    G1 Y357 X340
    G1 Y360 X324
    G1 Y357 X326
    G1 Y360 X326
    G1 Y357 X328
    G1 Y360 X330
    G1 Y357 X332
    G1 Y360 X334
    G1 Y357 X336
    G1 Y360 X338
    G1 Y357 X340
    G1 Y360 X324
    G1 Y357 X326
    G1 Y360 X326
    G1 Y357 X328
    G1 Y360 X330
    G1 Y357 X332
    G1 Y360 X334
    G1 Y357 X336
    G1 Y360 X338

[gcode_macro CLEAN_NOZZLE]
gcode:
    {% set mesh_calibrate_temp = printer['gcode_macro _global_var'].bed_mesh_calibrate_target_temp|int %}
    {% set current_target_temp  = printer.heater_bed.target|int %}
    {% set extruder_current_temp = printer.extruder.temperature|default(0)|int %}
    {% set clean_z = 1.3 %}

    {% if current_target_temp <= mesh_calibrate_temp %}
        SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={mesh_calibrate_temp}
    {% else %}
        SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={current_target_temp}
    {% endif %}

    {% if printer.toolhead.homed_axes != "xyz" %}
       G28
    {% endif %}
    {% if printer.quad_gantry_level.applied|lower != 'true' %}
        QUAD_GANTRY_LEVEL
        M117 Home Z after QGL
        STABLE_Z_HOME
        M400
    {% endif %}
    G90
    G1 X348 Y0 F9000
    G1 Z0.25 F300
    M117 Nozzle heating...
    M109 S200 ; wait for hotend temp
    G4 P10000
    _CLIENT_LINEAR_MOVE Z=10 F=1500

    M117 Clean nozzle
    G1 X315 Y360 F9000

    M106 S255 ; set fan speed to 100%
    M104 S130 ; set hotend temp and continue

    ; G1 Z0.5 F300
    G1 Z{clean_z} F300
    _SLOW_CLEAN_NOZZLE

    ; G1 Z0.5
    G1 Z{clean_z}
    _FAST_CLEAN_NOZZLE

    G1 Z{clean_z} F300
    _SLOW_CLEAN_NOZZLE

    ; G1 Z0.5
    G1 Z{clean_z}
    _FAST_CLEAN_NOZZLE

    M400
    M109 S130 ; wait for hotend temp
    M107 ; fan off
    {% if extruder_current_temp != 0 %}
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET={extruder_current_temp}
    {% else %}
        M104 S0 ; turn off hotend
    {% endif %}
    _CLIENT_LINEAR_MOVE Z=20 F=1500
    M117 Finished cleaning
    ; G28 Z0

[gcode_macro JERK_OFF]
description: To release structural stress on the printer
gcode:
    SAVE_GCODE_STATE NAME=_JERK_OFF
    SET_VELOCITY_LIMIT ACCEL=10000 ACCEL_TO_DECEL=5000
    G90

    # Lower Right
    G1 Z10 F1200
    G1 X247 Y70 F10000
    G1 F17105.168
    G1 X247.974 Y48.278 
    G1 X300.079 Y48.639 
    G1 X299.926 Y70.707 
    G1 X247.841 Y70.346 
    G1 X247.441 Y70.72 F36000
    G1 F17105.168
    G1 X247.599 Y47.898 
    G1 X300.459 Y48.265 
    G1 X300.301 Y71.087 
    G1 X247.461 Y70.72 
    G1 X247.05 Y71.106 F36000
    G1 X247.213 Y47.507 
    G1 X300.85 Y47.879 
    G1 X300.687 Y71.478 
    G1 X247.07 Y71.106 

    # Lower Left
    G1 F7200
    G1 X66.884 Y38.664
    G1 Z15.0
    G1 F17105.168
    G1 X66.731 Y60.732 
    G1 X14.625 Y60.371 
    G1 X14.778 Y38.303 
    G1 X66.864 Y38.664 
    G1 X67.264 Y38.29 F36000
    G1 F17105.168
    G1 X67.106 Y61.111 
    G1 X14.246 Y60.745 
    G1 X14.404 Y37.923 
    G1 X67.244 Y38.289 
    G1 X67.655 Y37.904 F36000
    G1 F12000
    G1 X67.491 Y61.503 
    G1 X13.855 Y61.131 
    G1 X14.018 Y37.532 
    G1 X67.635 Y37.904 
    
    # Upper Left
    G1 F7200
    G1 X65.851 Y294.503
    G1 Z7.45
    G1 F17105.168
    G1 X65.698 Y316.571 
    G1 X13.592 Y316.209 
    G1 X13.745 Y294.142 
    G1 X65.831 Y294.503 
    G1 X66.23 Y294.128 F36000
    G1 F17105.168
    G1 X66.072 Y316.95
    G1 X13.212 Y316.584 
    G1 X13.371 Y293.762 
    G1 X66.21 Y294.128 
    G1 X66.622 Y293.743 F36000
    G1 F12000
    G1 X66.458 Y317.341 
    G1 X12.821 Y316.97 
    G1 X12.985 Y293.371 
    G1 X66.602 Y293.742 

    # Upper Right
    G1 F7200
    G1 X334.843 Y321.84
    G1 Z7.45
    G1 F17105.168
    G1 X334.952 Y322.062 
    G1 X334.958 Y322.445 
    G1 X334.849 Y322.732 
    G1 X334.721 Y322.912 
    G1 X322.108 Y333.244 
    G1 X321.811 Y333.432 
    G1 X321.328 Y333.589 
    G1 X320.782 Y333.594 
    G1 X320.301 Y333.427 
    G1 X320.004 Y333.239 
    G1 X319.755 Y332.994 
    G1 X291.189 Y298.122 
    G1 X291.024 Y297.82 
    G1 X290.981 Y297.501 
    G1 X291.035 Y297.222 
    G1 X291.224 Y296.9 
    G1 X304.42 Y286.092 
    G1 X304.701 Y285.934 
    G1 X305.016 Y285.883 
    G1 X305.386 Y285.966 
    G1 X305.718 Y286.221 
    G1 X334.766 Y321.682 
    G1 X334.834 Y321.822 
    G1 X334.513 Y322.001 F36000
    G1 F17105.168
    G1 X334.584 Y322.146 
    G1 X334.588 Y322.372 
    G1 X334.448 Y322.648 
    G1 X321.869 Y332.952 
    G1 X321.466 Y333.169 
    G1 X321.096 Y333.236 
    G1 X320.738 Y333.193 
    G1 X320.28 Y332.981 
    G1 X320.046 Y332.755 
    G1 X291.481 Y297.883 
    G1 X291.383 Y297.704 
    G1 X291.357 Y297.516 
    G1 X291.468 Y297.188 
    G1 X304.659 Y286.384 
    G1 X304.825 Y286.291 
    G1 X305.011 Y286.26 
    G1 X305.23 Y286.309 
    G1 X305.426 Y286.46 
    G1 X334.474 Y321.921 
    G1 X334.505 Y321.983 
    G1 X334.174 Y322.167 F36000
    G1 F12000
    G1 X334.206 Y322.297 
    G1 X334.166 Y322.377 
    G1 X321.623 Y332.651 
    G1 X321.377 Y332.791 
    G1 X321.11 Y332.848 
    G1 X320.88 Y332.831 
    G1 X320.529 Y332.682 
    G1 X320.347 Y332.508 
    G1 X291.781 Y297.637 
    G1 X291.751 Y297.458 
    G1 X304.905 Y286.684 
    G1 X305.006 Y286.649 
    G1 X305.126 Y286.706 
    G1 X334.161 Y322.152 
    G1 X334.2 Y322.171
    G1 X334.444 Y321.92 Z8.05 F36000
    G1 X334.788 Y322.34
    G1 X321.839 Y332.947
    G1 X321.694 Y333.047
    G1 X321.536 Y333.124
    G1 X321.351 Y333.183
    G1 X321.162 Y333.213
    G1 X320.994 Y333.216
    G1 X320.848 Y333.201
    G1 X320.664 Y333.158
    G1 X320.48 Y333.083
    G1 X320.348 Y333.003
    G1 X320.262 Y332.94
    G1 X320.166 Y332.855
    G1 X320.071 Y332.748
    G1 X292.797 Y299.454
    G1 X287.043 Y296.719
    G1 X287.352 Y296.466
    G1 Z7.45
    G1 F17105.168
    G1 X304.424 Y282.481 
    G1 X337.443 Y322.791 
    G1 X320.372 Y336.775 
    G1 X287.365 Y296.481 
    G1 X286.821 Y296.413 F36000
    G1 F17105.168
    G1 X304.477 Y281.951 
    G1 X337.974 Y322.843 
    G1 X320.319 Y337.306 
    G1 X286.834 Y296.428 
    G1 X286.275 Y296.359 F36000
    G1 F12000
    G1 X304.531 Y281.404 
    G1 X338.521 Y322.898 
    G1 X320.265 Y337.853 
    G1 X286.287 Y296.374 


    G1 F7200
    SET_VELOCITY_LIMIT ACCEL=3800 ACCEL_TO_DECEL=1900
    RESTORE_GCODE_STATE NAME=_JERK_OFF


[gcode_macro M1900]
gcode:
    {% set s = params.S|float %}
    {% for p in params %}
        {action_respond_info("MHamid: p: {}, param:{}".format(p, params[p]))}
    {% endfor %}
    {% if s != -1.0 %}
        {action_respond_info("MHamid: s: {}".format(s))}
    {% else %}
        {action_respond_info("MHamid: s: not defined")}
    {% endif %}

[gcode_macro REPORT_Z_OFFSET]
gcode:
  M118 Current dynamic Z offset: {printer.gcode_move.homing_origin.z}


[gcode_macro mgn_breakin]
gcode:
    {% set speed_upper = 24000 %}
    {% set speed_lower = 6000 %}
    {% set max_x = 345 %}
    {% set max_y = 345 %}

    # SET_HEATER_TEMPERATURE HEATER=extruder TARGET=140
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=60
    # TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={bed_temperature_initial_layer_single-6}

    {% if "xyz" not in printer.toolhead.homed_axes %}
    G28
    {% endif %}

    G90
    G1 X175 Y175 Z150 F2100
    {% for i in range(100) %}

        {% set rspeed = range(speed_lower, speed_upper) | random | int %}
        {% set yrand =  (range(1, max_y) | random) + ((range(1, 99) | random) / 100) %}
        {% set xrand =  (range(1, max_x) | random) + ((range(1, 99) | random) / 100) %}
        {% set m = "Iteration {} starts with F{} and Y{}".format(i+1, rspeed, yrand) %}
        M117 {m}
        G1 X{xrand} Y{yrand} F{rspeed}


        {% set rspeed = range(speed_lower, speed_upper) | random | int %}
        {% set yrand =  (range(1, max_y) | random) + ((range(1, 99) | random) / 100) %}
        {% set xrand =  (range(1, max_x) | random) + ((range(1, 99) | random) / 100) %}
        G1 X{xrand} Y{yrand} F{rspeed}
        {% set rspeed = range(speed_lower, speed_upper) | random | int %}
        {% set yrand =  (range(1, max_y) | random) + ((range(1, 99) | random) / 100) %}
        {% set xrand =  (range(1, max_x) | random) + ((range(1, 99) | random) / 100) %}
        G1 X{xrand} Y{yrand} F{rspeed}
        {% set rspeed = range(speed_lower, speed_upper) | random | int %}
        {% set yrand =  (range(1, max_y) | random) + ((range(1, 99) | random) / 100) %}
        {% set xrand =  (range(1, max_x) | random) + ((range(1, 99) | random) / 100) %}
        G1 X{xrand} Y{yrand} F{rspeed}
        {% set rspeed = range(speed_lower, speed_upper) | random | int %}
        {% set yrand =  (range(1, max_y) | random) + ((range(1, 99) | random) / 100) %}
        {% set xrand =  (range(1, max_x) | random) + ((range(1, 99) | random) / 100) %}
        G1 X{xrand} Y{yrand} F{rspeed}
        {% set rspeed = range(speed_lower, speed_upper) | random | int %}
        {% set yrand =  (range(1, max_y) | random) + ((range(1, 99) | random) / 100) %}
        {% set xrand =  (range(1, max_x) | random) + ((range(1, 99) | random) / 100) %}
        G1 X{xrand} Y{yrand} F{rspeed}

        G1 X1 Y1 F{speed_upper}

        {% set rspeed = range(speed_lower, speed_upper) | random | int %}
        {% set yrand =  (range(1, max_y) | random) + ((range(1, 99) | random) / 100) %}
        {% set xrand =  (range(1, max_x) | random) + ((range(1, 99) | random) / 100) %}
        G1 X{xrand} Y{yrand} F{rspeed}
        {% set rspeed = range(speed_lower, speed_upper) | random | int %}
        {% set yrand =  (range(1, max_y) | random) + ((range(1, 99) | random) / 100) %}
        {% set xrand =  (range(1, max_x) | random) + ((range(1, 99) | random) / 100) %}
        G1 X{xrand} Y{yrand} F{rspeed}
        {% set rspeed = range(speed_lower, speed_upper) | random | int %}
        {% set yrand =  (range(1, max_y) | random) + ((range(1, 99) | random) / 100) %}
        {% set xrand =  (range(1, max_x) | random) + ((range(1, 99) | random) / 100) %}
        G1 X{xrand} Y{yrand} F{rspeed}
        {% set rspeed = range(speed_lower, speed_upper) | random | int %}
        {% set yrand =  (range(1, max_y) | random) + ((range(1, 99) | random) / 100) %}
        {% set xrand =  (range(1, max_x) | random) + ((range(1, 99) | random) / 100) %}
        G1 X{xrand} Y{yrand} F{rspeed}

        {% set rspeed = range(speed_lower, speed_upper) | random | int %}
        {% set yrand =  (range(1, max_y) | random) + ((range(1, 99) | random) / 100) %}
        {% set xrand =  (range(1, max_x) | random) + ((range(1, 99) | random) / 100) %}
        {% set m = "X, Y coordinate: {}".format(xrand, yrand) %}
        M117 {m}
        G1 X{xrand} Y{yrand} F{rspeed}

        G1 X230 Y230 F{speed_upper}


    {% endfor %}

[gcode_macro POWER_OFF_PRINTER]
description: Initiates printer shutdown with safety checks for temperature and optional delay
variable_state: 0  # 0=idle, 1=waiting
variable_target_temp: 60
variable_shutdown_delay: 0
gcode:
    {% set FORCE = params.FORCE|default(0)|int %}
    {% set MAX_TEMP = params.MAX_TEMP|default(60)|int %}
    {% set DELAY = params.DELAY|default(0)|int %}

    # Reset state
    SET_GCODE_VARIABLE MACRO=POWER_OFF_PRINTER VARIABLE=target_temp VALUE={MAX_TEMP}
    SET_GCODE_VARIABLE MACRO=POWER_OFF_PRINTER VARIABLE=shutdown_delay VALUE={DELAY * 60}  # Convert to seconds
    SET_GCODE_VARIABLE MACRO=POWER_OFF_PRINTER VARIABLE=state VALUE=1

    # Handle forced shutdown
    {% if FORCE == 1 %}
        {% if printer.extruder.temperature >= 50 %}
            M118 üíÄüíÄüíÄüíÄ
            RESPOND TYPE=error MSG="Warning: Hotend is still hot (temp={printer.extruder.temperature}¬∞C)"
            M118 üíÄüíÄüíÄüíÄ 
        {% endif %}
        RESPOND MSG="Force shutdown initiated"
        TURN_OFF_HEATERS
        _ALL_FAN_OFF
        M84  # Disable steppers
        {% set _chamber_macro_exists = ("gcode_macro _CHAMBER_HEAT_STATE" in printer and printer["gcode_macro _CHAMBER_HEAT_STATE"].enabled is defined) or ("heater_generic chamber_heater" in printer.heaters.available_heaters) %}
        {% if _chamber_macro_exists %}
          CHAMBER_HEAT_STOP
        {% endif %}
        {action_call_remote_method("set_device_power", device="printer", state="off")}
        return
    {% endif %}

    # Start monitoring temperature and delay
    {% if DELAY > 0 %}
        RESPOND MSG="Power off sequence initiated (Target: {MAX_TEMP}¬∞C, Delay: {DELAY}min)"
    {% else %}
        RESPOND MSG="Power off sequence initiated (Target: {MAX_TEMP}¬∞C)"
    {% endif %}
    TURN_OFF_HEATERS
    UPDATE_DELAYED_GCODE ID=_POWER_OFF_CHECK DURATION=1

[delayed_gcode _POWER_OFF_CHECK]
gcode:
    {% set TARGET = printer["gcode_macro POWER_OFF_PRINTER"].target_temp|float %}
    {% set DELAY = printer["gcode_macro POWER_OFF_PRINTER"].shutdown_delay|float %}
    {% set STATE = printer["gcode_macro POWER_OFF_PRINTER"].state|int %}

    # Always decrease delay if it was set
    {% if DELAY > 0 %}
        SET_GCODE_VARIABLE MACRO=POWER_OFF_PRINTER VARIABLE=shutdown_delay VALUE={DELAY - 1}
    {% endif %}

    # Check temperature
    {% if STATE == 1 %}
        {% if printer.extruder.temperature <= TARGET %}
            _ALL_FAN_OFF
            {% if DELAY > 0 %}
                RESPOND MSG="Temperature reached target, waiting {(DELAY/60)|round(1)} more minutes"
                UPDATE_DELAYED_GCODE ID=_POWER_OFF_CHECK DURATION=1
            {% else %}
                RESPOND MSG="üíÄ Shutting down... üíÄ"
                M84
                {% set _chamber_macro_exists = ("gcode_macro _CHAMBER_HEAT_STATE" in printer and printer["gcode_macro _CHAMBER_HEAT_STATE"].enabled is defined) or ("heater_generic chamber_heater" in printer.heaters.available_heaters) %}
                {% if _chamber_macro_exists %}
                  CHAMBER_HEAT_STOP
                {% endif %}
                {action_call_remote_method("set_device_power", device="printer", state="off")}
            {% endif %}
        {% else %}
            UPDATE_DELAYED_GCODE ID=_POWER_OFF_CHECK DURATION=1
        {% endif %}
    {% endif %}

[gcode_macro CANCEL_POWER_OFF]
description: Cancels any pending power off operation
gcode:
    SET_GCODE_VARIABLE MACRO=POWER_OFF_PRINTER VARIABLE=state VALUE=0
    UPDATE_DELAYED_GCODE ID=_POWER_OFF_CHECK DURATION=0
    {action_respond_info("Power off sequence cancelled")}


[gcode_macro DELAYED_FAN_OFF]
description: Turns off fans when hotend reaches target temperature
variable_state: 0  # 0=idle, 1=waiting
variable_target_temp: 40  # Default target temperature
gcode:
    {% set TARGET = params.TEMP|default(60)|int %}

    # Reset state
    SET_GCODE_VARIABLE MACRO=DELAYED_FAN_OFF VARIABLE=target_temp VALUE={TARGET}
    SET_GCODE_VARIABLE MACRO=DELAYED_FAN_OFF VARIABLE=state VALUE=1

    # Start monitoring temperature
    RESPOND MSG="Waiting for hotend to cool below {TARGET}¬∞C before turning off fans"
    UPDATE_DELAYED_GCODE ID=_FAN_OFF_CHECK DURATION=5

[delayed_gcode _FAN_OFF_CHECK]
gcode:
    {% set TARGET = printer["gcode_macro DELAYED_FAN_OFF"].target_temp|float %}
    {% set STATE = printer["gcode_macro DELAYED_FAN_OFF"].state|int %}

    # Check temperature
    {% if STATE == 1 %}
        {% if printer.extruder.temperature <= TARGET %}
            RESPOND MSG="Temperature reached {TARGET}¬∞C, turning off fans"
            M106 S0
            M107    # Turn off part cooling fan
            SET_GCODE_VARIABLE MACRO=DELAYED_FAN_OFF VARIABLE=state VALUE=0
        {% else %}
            UPDATE_DELAYED_GCODE ID=_FAN_OFF_CHECK DURATION=1
        {% endif %}
    {% endif %}

[gcode_macro CANCEL_FAN_OFF]
description: Cancels pending delayed fan off
gcode:
    SET_GCODE_VARIABLE MACRO=DELAYED_FAN_OFF VARIABLE=state VALUE=0
    UPDATE_DELAYED_GCODE ID=_FAN_OFF_CHECK DURATION=0
    {action_respond_info("Delayed fan off cancelled")}

[gcode_macro TIMELAPSE_RENDER_1]
description: Non-blocking "Render timelapse"
gcode:
    UPDATE_DELAYED_GCODE ID=_start_timelapse_render DURATION=1
    {action_respond_info("Timelapse render started")}

[delayed_gcode _start_timelapse_render]
gcode:
    TIMELAPSE_RENDER
