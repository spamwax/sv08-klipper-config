[gcode_macro FULL_HOME]
description: Full homing and quad gantry leveling combined
gcode:
    G28
    _QGL
    MY_BED_MESH_CALIBRATE ADAPTIVE=1 mesh_min=100,100 mesh_max=250,250 probe_count=4 mesh_pps=1,1

[gcode_macro BEEPC]
description: Beep COUNT times
gcode:
    {% set count = params.COUNT|default(1)|int %}
    {% for i in range(count) %}
        BEEP
        G4 P350
    {% endfor %}

[delayed_gcode _check_idle_soaking]
# initial_duration: 2
gcode:
    {% set soaking_active = printer["gcode_macro SOAK_WAIT"].active %}
    {% set counter        = printer["gcode_macro SOAK_WAIT"].count  %}
    {% set minutes        = printer["gcode_macro SOAK_WAIT"].minutes %}
    {% set soak_temp      = printer["gcode_macro SOAK_WAIT"].soak_temp %}
    {% set ignore_soak_wait = printer["gcode_macro SOAK_WAIT"].ignore_soak_wait %}
    {% set interval = printer["gcode_macro SOAK_WAIT"].interval %}
    {% if counter * interval <= minutes * 60 and soaking_active == 1 %}
        # M118 {"Checking after {} seconds has passed!".format(counter * interval)}
        SET_GCODE_VARIABLE MACRO=SOAK_WAIT VARIABLE=count VALUE={counter+1}
    {% elif counter * 55 > minutes * 60 and soaking_active == 1 and ignore_soak_wait == 0 %}
        {% set soaking_active = 0 %}
    {% endif %}

    {% if (soaking_active == 1) and (ignore_soak_wait == 0) %}
        SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={soak_temp}
        UPDATE_DELAYED_GCODE ID=_check_idle_soaking DURATION={interval}
    {% else %}
        {% if ignore_soak_wait == 0 %}
            M118 ‚ùó SOAK_WAIT is turning off the heaters ‚ùó
            TURN_OFF_HEATERS
        {% else %}
            M118 ü•¥ START_PRINT macro is disabling us! ü•¥
        {% endif %}
        SET_GCODE_VARIABLE MACRO=SOAK_WAIT VARIABLE=active VALUE=0
        SET_GCODE_VARIABLE MACRO=SOAK_WAIT VARIABLE=count VALUE=0
        SET_GCODE_VARIABLE MACRO=SOAK_WAIT VARIABLE=minutes VALUE=0
        {% if ignore_soak_wait == 0 %}
            M118 Turned off the heaters
            BEEPC COUNT=2
        {% endif %}

    {% endif %}


[gcode_macro SOAK_WAIT]
description: Keep the bed heated for MINUTE (30) minutes on
variable_active: 0
variable_count: 0
variable_minutes: 0
variable_interval: 10
variable_ignore_soak_wait: 0
variable_soak_temp: 0
gcode:
    {action_respond_info("ü´®ü´® SOAK_WAIT ü´®ü´®")}
    {% set interval = printer["gcode_macro SOAK_WAIT"].interval %}
    {% set mesh_calibrate_temp = printer['gcode_macro _global_var'].bed_mesh_calibrate_target_temp|int %}
    {% set current_target_temp  = printer.heater_bed.target|int %}

    {% if params.MINUTE is defined %}
        {% set heatsoak_time = params.MINUTE|default(10)|int %}
    {% else %}
        {% set heatsoak_time = 30 %}
    {% endif %}
    {% if params.STOP is defined %}
        SET_GCODE_VARIABLE MACRO=SOAK_WAIT VARIABLE=active VALUE=0
        SET_GCODE_VARIABLE MACRO=SOAK_WAIT VARIABLE=count VALUE=0
        SET_GCODE_VARIABLE MACRO=SOAK_WAIT VARIABLE=minutes VALUE=0
        SET_GCODE_VARIABLE MACRO=SOAK_WAIT VARIABLE=ignore_soak_wait VALUE=0
        TURN_OFF_HEATERS
        UPDATE_DELAYED_GCODE ID=_check_idle_soaking DURATION=1
    {% else %}
        BEEPC COUNT=1
        {% if current_target_temp <= mesh_calibrate_temp %}
          SET_GCODE_VARIABLE MACRO=SOAK_WAIT VARIABLE=soak_temp VALUE={mesh_calibrate_temp}
          SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={mesh_calibrate_temp}
        {% else %}
          SET_GCODE_VARIABLE MACRO=SOAK_WAIT VARIABLE=soak_temp VALUE={current_target_temp}
          SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={current_target_temp}
        {% endif %}
        M118 {"Soaking {} min. at {}¬∞C...".format(heatsoak_time, current_target_temp)}
        G4 P250
        SET_GCODE_VARIABLE MACRO=SOAK_WAIT VARIABLE=active VALUE=1
        SET_GCODE_VARIABLE MACRO=SOAK_WAIT VARIABLE=minutes VALUE={heatsoak_time}
        SET_GCODE_VARIABLE MACRO=SOAK_WAIT VARIABLE=ignore_soak_wait VALUE=0
        UPDATE_DELAYED_GCODE ID=_check_idle_soaking DURATION=1
        G4 P2000
        M400
        {% if printer.toolhead.homed_axes|lower != "xyz" %}
            G28
        {% endif %}
        _CLIENT_LINEAR_MOVE X=177.5 Y=177.5 Z=20.0 F=1500 ABSOLUTE=1
        M84
    {% endif %}

[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}

    RESPOND MSG="üü¢ Substituting ->M109 {rawparams}<- with: M104 {% for p in params if p != params.keys()|list|first %}{'%s%s ' % (p, params[p])}{% endfor %}"
    M104 {% for p in params if p != params.keys()|list|first %}{'%s%s ' % (p, params[p])}{% endfor %} ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   ; Wait for hotend temp (within 1 degree)
    {% endif %}

[gcode_macro M190]
rename_existing: M99190
gcode:
    #Parameters
    {% set s = params.S|default(0.0)|float %}

    RESPOND MSG="üü¢ Substituting ->M190 {rawparams}<- with: M140 {% for p in params if p != params.keys()|list|first %}{'%s%s ' % (p, params[p])}{% endfor %}"
    M140 {% for p in params if p != params.keys()|list|first %}{'%s%s ' % (p, params[p])}{% endfor %}
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={ s - 1.0 } MAXIMUM={ s + 3 }  ; Wait for bed temp (within 1 degree)
    {% endif %}

[gcode_macro M600]
gcode:
    PAUSE STATE=filament_change



[gcode_macro M1900]
gcode:
    {% set s = params.S|float %}
    {% for p in params %}
        {action_respond_info("MHamid: p: {}, param:{}".format(p, params[p]))}
    {% endfor %}
    {% if s != -1.0 %}
        {action_respond_info("MHamid: s: {}".format(s))}
    {% else %}
        {action_respond_info("MHamid: s: not defined")}
    {% endif %}



[gcode_macro mgn_breakin]
gcode:
    {% set speed_upper = 24000 %}
    {% set speed_lower = 6000 %}
    {% set max_x = 345 %}
    {% set max_y = 345 %}

    # SET_HEATER_TEMPERATURE HEATER=extruder TARGET=140
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=60
    # TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={bed_temperature_initial_layer_single-6}

    {% if "xyz" not in printer.toolhead.homed_axes %}
    G28
    {% endif %}

    G90
    G1 X175 Y175 Z150 F2100
    {% for i in range(100) %}

        {% set rspeed = range(speed_lower, speed_upper) | random | int %}
        {% set yrand =  (range(1, max_y) | random) + ((range(1, 99) | random) / 100) %}
        {% set xrand =  (range(1, max_x) | random) + ((range(1, 99) | random) / 100) %}
        {% set m = "Iteration {} starts with F{} and Y{}".format(i+1, rspeed, yrand) %}
        M117 {m}
        G1 X{xrand} Y{yrand} F{rspeed}


        {% set rspeed = range(speed_lower, speed_upper) | random | int %}
        {% set yrand =  (range(1, max_y) | random) + ((range(1, 99) | random) / 100) %}
        {% set xrand =  (range(1, max_x) | random) + ((range(1, 99) | random) / 100) %}
        G1 X{xrand} Y{yrand} F{rspeed}
        {% set rspeed = range(speed_lower, speed_upper) | random | int %}
        {% set yrand =  (range(1, max_y) | random) + ((range(1, 99) | random) / 100) %}
        {% set xrand =  (range(1, max_x) | random) + ((range(1, 99) | random) / 100) %}
        G1 X{xrand} Y{yrand} F{rspeed}
        {% set rspeed = range(speed_lower, speed_upper) | random | int %}
        {% set yrand =  (range(1, max_y) | random) + ((range(1, 99) | random) / 100) %}
        {% set xrand =  (range(1, max_x) | random) + ((range(1, 99) | random) / 100) %}
        G1 X{xrand} Y{yrand} F{rspeed}
        {% set rspeed = range(speed_lower, speed_upper) | random | int %}
        {% set yrand =  (range(1, max_y) | random) + ((range(1, 99) | random) / 100) %}
        {% set xrand =  (range(1, max_x) | random) + ((range(1, 99) | random) / 100) %}
        G1 X{xrand} Y{yrand} F{rspeed}
        {% set rspeed = range(speed_lower, speed_upper) | random | int %}
        {% set yrand =  (range(1, max_y) | random) + ((range(1, 99) | random) / 100) %}
        {% set xrand =  (range(1, max_x) | random) + ((range(1, 99) | random) / 100) %}
        G1 X{xrand} Y{yrand} F{rspeed}

        G1 X1 Y1 F{speed_upper}

        {% set rspeed = range(speed_lower, speed_upper) | random | int %}
        {% set yrand =  (range(1, max_y) | random) + ((range(1, 99) | random) / 100) %}
        {% set xrand =  (range(1, max_x) | random) + ((range(1, 99) | random) / 100) %}
        G1 X{xrand} Y{yrand} F{rspeed}
        {% set rspeed = range(speed_lower, speed_upper) | random | int %}
        {% set yrand =  (range(1, max_y) | random) + ((range(1, 99) | random) / 100) %}
        {% set xrand =  (range(1, max_x) | random) + ((range(1, 99) | random) / 100) %}
        G1 X{xrand} Y{yrand} F{rspeed}
        {% set rspeed = range(speed_lower, speed_upper) | random | int %}
        {% set yrand =  (range(1, max_y) | random) + ((range(1, 99) | random) / 100) %}
        {% set xrand =  (range(1, max_x) | random) + ((range(1, 99) | random) / 100) %}
        G1 X{xrand} Y{yrand} F{rspeed}
        {% set rspeed = range(speed_lower, speed_upper) | random | int %}
        {% set yrand =  (range(1, max_y) | random) + ((range(1, 99) | random) / 100) %}
        {% set xrand =  (range(1, max_x) | random) + ((range(1, 99) | random) / 100) %}
        G1 X{xrand} Y{yrand} F{rspeed}

        {% set rspeed = range(speed_lower, speed_upper) | random | int %}
        {% set yrand =  (range(1, max_y) | random) + ((range(1, 99) | random) / 100) %}
        {% set xrand =  (range(1, max_x) | random) + ((range(1, 99) | random) / 100) %}
        {% set m = "X, Y coordinate: {}".format(xrand, yrand) %}
        M117 {m}
        G1 X{xrand} Y{yrand} F{rspeed}

        G1 X230 Y230 F{speed_upper}


    {% endfor %}
